site_name: Compiler Design Course
site_url: https://m-zakeri.github.io/Compilers
repo_url: https://github.com/m-zakeri/Compilers
site_description: Compiler design (Dragon) course materials and codes
site_author: Morteza Zakeri
copyright:  2020-2025 &copy; all rights reserved. Morteza Zakeri, Intelligent Software Engineering Laboratory at Tehran Polytechnic.


theme:
  name: material
  palette:
    - scheme: default
      primary: purple
      accent: red
      toggle:
        icon: material/toggle-switch-off-outline
        name: Dark mode
    - scheme: slate
      primary: purple
      accent: red
      toggle:
        icon: material/toggle-switch
        name: Light mode

  icon:
    logo: material/library
    repo: fontawesome/brands/github


  features:
    - content.tooltips

    # Navigation features -----------------------------------------
    - navigation.indexes
    - navigation.instant
    - navigation.instant.progress
    - navigation.instant.preview
    - navigation.tracking
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.top # Add "back to top" button
    - navigation.path
    - toc.follow
    - toc.integrate # good feature :)

    # setup the search -----------------------------------------
    - search.suggest # search suggest completion
    - search.highlight # search highlight
    - search.share # deep linking

    # setup header ---------------------------------------------
    - header.autohide # autohide header
    - announce.dismiss
    - content.footnote.tooltips

    # setup footer ---------------------------------------------
    - navigation.footer # footer navigation

  font:
    text: Roboto # You can use any font from Google Fonts
    code: Roboto Mono

  extra:
    social:
      - icon: fontawesome/brands/linkedin
        link: https://www.linkedin.com/in/mortazazakeri/


plugins:
  - blog:
      blog_dir: blog
      authors_profiles: true
      authors_profiles_name: Authors

  - search
  - meta
  - tags
  - mkdocstrings:
      default_handler: python
      handlers:
        python:
          setup_commands:
            - import sys
            - import os
          selection:
            members: True


extra_css:
  - stylex.css


markdown_extensions:
  - abbr
  - admonition # support for admonitions ---> use this in markdown like this : !!! note "Note" or ??? warning "Warning"
  - pymdownx.details # support for admonitions with collapse
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences
  - pymdownx.tabbed:
      alternate_style: true
  - tables
  - footnotes
  - pymdownx.critic
  - pymdownx.caret
  - pymdownx.keys
  - pymdownx.mark
  - pymdownx.tilde
  - def_list
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  #- pymdownx.blocks.caption

  - toc:
      slugify: !!python/object/apply:pymdownx.slugs.slugify
        kwds:
          case: lower

nav:
    - Home: index.md
    - Announcements: announcements.md
    - Lectures:
        - Table of Contents: lectures/README.md
        - Unit 0 Introduction: lectures/00_Introduction.md
        - Unit 1 Compiler basics: lectures/01_Compiler-Basic.md
        - Unit 2 Bootstrapping: lectures/02_Bootstrapping.md
        - Unit 3 Lexical analysis: lectures/03_Regular-Expressions-and-Lexical-Analysis.md
        - Unit 4 Manual constructions of lexers: lectures/04_Manual_Construction_of_Lexers.md
        - Unit 5 Automatic constructions of lexers: lectures/05_Automatic_construction_of_Lexers.md
        - Unit 6 Syntax analysis: lectures/06_Syntax-Analysis.md
        - Unit 7 Type of grammars: lectures/07_Types-of-Grammar.md
        - Unit 8 Eliminating ambiguity: lectures/08_Ambiguity-Problems-and-Eliminating-the-Ambiguity.md
        - Unit 9 Top-down parsing: lectures/09_Top-down.md
        - Unit 10 Bottom-up parsing (I): lectures/10_Bottom-up_I.md
        - Unit 11 Bottom-up parsing (II): lectures/11_Bottom-up_II.md
        - Unit 12 LR(0) parsing: lectures/12_LR0_parsing.md
        - Unit 13 SLR parsing: lectures/13_SLR_parsing.md
        - Unit 14 LR(1) parsing: lectures/14_LR1_parsing.md
        - Unit 15 LALR(1) parsing: lectures/15_LALR1_parsing.md
        - Unit 16 Ambiguous SLR grammars: lectures/16_ambiguous_SLRs.md
        - Unit 17 Error recovery in LR parsing: lectures/17_error_recovery_in_LR_parsing.md
        - Unit 18 Bottom-up parser generators: lectures/18_Bottom-up-Parser-Generators.md
        - Unit 19 Parsing with CYK algorithm: lectures/19_CYK_parsing_algorithm.md
    - ANTLR tutorials:
        - Basic: antlr_tutorials/antlr_basics.md
        - Advanced: antlr_tutorials/antlr_advanced.md
        - Slides: antlr_tutorials/antlr_slides.md
    - Language applications:
        - Main: language_applications/main.md
        - Assignment statement 1: language_applications/assignment_statement1main.md
        - Assignment statement 2: language_applications/assignment_statement2main.md
        - Assignment statement 3: language_applications/assignment_statement3main.md
        - Assignment statement 4: language_applications/assignment_statement4main.md
    - Assignments:
        - Index: assignments/index.md
        - Writing assignments: assignments/writing_assignments.md
        - Programming assignments: assignments/programming_assignment.md
    - Projects:
        - Index: projects/index.md
        - Symbol table: projects/core_symbol_table_development.md
        - Software metrics: projects/core_software_metrics_development.md
        - Code smell detection: projects/core_code_smell_development.md
        - Refactoring to patterns: projects/core_refactoring_to_design_patterns_development.md
        - Source code refactoring: projects/core_refactorings_development.md
        - Clean code: projects/core_clean_code_development.md
        - Source code instrumentation: projects/core_source_code_instrumentation_development.md
        - MiniJava compiler development: projects/mini_java_compiler_development.md
    - Calendar: calendar/index.md
    - Blog:
        - blog/index.md
    - Issue Tracker: 'https://github.com/m-zakeri/Compilers/issues'


# for hiding the navigation and toc (used in top of .md file)
# ---
# hide:
#   - navigation
#   - toc
# ---

# # Page title
# ...


# for adding tags to the page (used in top of .md file)
# ---
# tags:
#   - HTML5
#   - JavaScript
#   - CSS
#   - Python
# ---